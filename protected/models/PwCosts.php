<?php

/**
 * This is the model class for table "{{pw_costs}}".
 *
 * The followings are the available columns in table '{{pw_costs}}':
 * @property integer $id
 * @property integer $platinum
 * @property integer $price
 * @property integer $discount
 * @property string $image
 * @property string $box_type
 *
 * @property PwCostsBox[] $boxes
 */
class PwCosts extends CActiveRecord
{
	const BOX_TYPE_MAY_NONE  = 'may_none';
	const BOX_TYPE_FORCE_BOX = 'force_box';

	public $image_tmp;
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return '{{pw_costs}}';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('platinum, price', 'required'),
			array('platinum, price, discount', 'numerical', 'integerOnly'=>true),
			array('image', 'length', 'max'=>255),
			array('image_tmp', 'file', 'types'=>'jpg, gif, png', 'safe' => false, 'allowEmpty' => true),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, platinum, price, discount, image', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'boxes' => array(self::HAS_MANY, 'PwCostsBox', 'cost_id', 'order'=>'boxes.chance ASC'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'platinum' => 'Крышки',
			'price' => 'Цена',
			'discount' => 'Скидка',
			'image' => 'Картинка',
			'image_tmp' => 'Картинка',
			'box_type' => 'Режим выдачи бонусного ящика',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('platinum',$this->platinum);
		$criteria->compare('price',$this->price);
		$criteria->compare('discount',$this->discount);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return PwCosts the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	public function beforeDelete() {
		foreach ($this->boxes as $one) $one->delete();
		return parent::beforeDelete(); // TODO: Change the autogenerated stub
	}
}
